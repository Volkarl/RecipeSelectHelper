<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RecipeSelectHelper.Resources;assembly=RecipeSelectHelper"
                    xmlns:model="clr-namespace:RecipeSelectHelper.Model;assembly=RecipeSelectHelper"
                    xmlns:resources="clr-namespace:RecipeSelectHelper.Resources">

    <DataTemplate x:Key="ArrowUp">
        <DockPanel>
            <TextBlock HorizontalAlignment="Center" 
                Text="{Binding}" />
            <Path VerticalAlignment="Center" 
        Fill="Black" 
        Data="M 5,5 15,5 10,0 5,5" />
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="ArrowDown">
        <DockPanel>
            <TextBlock HorizontalAlignment="Center" 
                Text="{Binding}" />
            <Path VerticalAlignment="Center" 
        Fill="Black" 
        Data="M 5,0 10,5 15,0 5,0" />
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="IconBack">
        <Viewbox>
            <Canvas Width="24" Height="24">
                <Path Data="M20,9V15H12V19.84L4.16,12L12,4.16V9H20Z" Fill="Black" />
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="IconSearch">
        <Viewbox>
            <Canvas Width="24" Height="24">
                <Path Data="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 
                  14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,
                  15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 
                  5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z" Fill="Black" />
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="SearchButton">
        <StackPanel Orientation="Horizontal">
            <ContentPresenter ContentTemplate="{StaticResource IconSearch}"></ContentPresenter>
            <TextBlock Text="Search" VerticalAlignment="Center"></TextBlock>
        </StackPanel>
    </DataTemplate>

    <Style TargetType="ListViewItem" x:Key="Style_ListViewItemStretch">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <local:NullOrEmptyToVisibilityConverter x:Key="NullOrEmptyToVisibilityConverter"></local:NullOrEmptyToVisibilityConverter>
    
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>

    <Style x:Key="ImageCheckmark" TargetType="{x:Type Image}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding DisplayCheckmark}" Value="Null">
                <Setter Property="Source" Value="{x:Null}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding DisplayCheckmark}" Value="True">
                <Setter Property="Image.Source" Value="check.png" ></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding DisplayCheckmark}" Value="False">
                <Setter Property="Image.Source" Value="close.png" ></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StyleBorderColorOnBool" TargetType="{x:Type Control}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" Value="Null">
                <Setter Property="BorderBrush" Value="{x:Null}"></Setter>
                <Setter Property="ToolTip" Value="{x:Null}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"  Value="True">
                <Setter Property="BorderBrush" Value="LawnGreen"></Setter>
                <Setter Property="ToolTip" Value="{x:Null}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="BorderBrush" Value="Orange"></Setter>
                <Setter Property="ToolTip" Value="Name invalid or already taken"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="DataTemplateGroupedRecipeCategory" DataType="{x:Type model:GroupedRecipeCategory}">
        <StackPanel Margin="1">
            <StackPanel.Background>
                <SolidColorBrush Color="Gray" Opacity="0.1"></SolidColorBrush>
            </StackPanel.Background>

            <TextBlock Margin="1">
                    <Run Text="Select"></Run>
                    <Run Text="{Binding MinSelect}"></Run>
                    <Run Text="to"></Run>
                    <Run Text="{Binding MaxSelect}"></Run>
                    <Run Text="types:"></Run>
            </TextBlock>

            <ItemsControl ItemsSource="{Binding GroupedRc}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Margin="1" Orientation="Horizontal" ScrollViewer.HorizontalScrollBarVisibility="Disabled"></WrapPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Content="{Binding Instance.Name}" IsChecked="{Binding Bool, Mode=TwoWay}"></CheckBox>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

            </ItemsControl>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DataTemplateGroupedProductCategory" DataType="{x:Type model:GroupedProductCategory}">
        <StackPanel Margin="1">
            <StackPanel.Background>
                <SolidColorBrush Color="Gray" Opacity="0.1"></SolidColorBrush>
            </StackPanel.Background>

            <TextBlock Margin="1">
                    <Run Text="Select"></Run>
                    <Run Text="{Binding MinSelect}"></Run>
                    <Run Text="to"></Run>
                    <Run Text="{Binding MaxSelect}"></Run>
                    <Run Text="types:"></Run>
            </TextBlock>

            <ItemsControl ItemsSource="{Binding GroupedPc}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Margin="1" Orientation="Horizontal" ScrollViewer.HorizontalScrollBarVisibility="Disabled"></WrapPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Content="{Binding Instance.Name}" IsChecked="{Binding Bool, Mode=TwoWay}"></CheckBox>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </DataTemplate>

    <Style x:Key="StyleItemsControlWrapPanel" TargetType="ItemsControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" IsItemsHost="True">
                        <WrapPanel.Background>
                            <SolidColorBrush Color="Gray" Opacity="0.1"></SolidColorBrush>
                        </WrapPanel.Background>
                    </WrapPanel>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ItemsControlFilterByProductCategory" DataType="local:FilterProductCategory">
        <CheckBox Content="{Binding Instance.Name}" IsChecked="{Binding Bool}"></CheckBox>
    </DataTemplate>

    <DataTemplate x:Key="ItemsControlFilterByRecipeCategory" DataType="local:FilterRecipeCategory">
        <CheckBox Content="{Binding Instance.Name}" IsChecked="{Binding Bool}"></CheckBox>
    </DataTemplate>

    <DataTemplate x:Key="ItemsControlFilterByGroupedProductCategory" DataType="local:FilterGroupedProductCategories">
        <ItemsControl ItemsSource="{Binding}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Margin="1" Orientation="Horizontal" ScrollViewer.HorizontalScrollBarVisibility="Disabled"></StackPanel>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <CheckBox Content="{Binding Instance.Name}" IsChecked="{Binding Bool, Mode=TwoWay}"></CheckBox>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate x:Key="ItemsControlFilterByGroupedRecipeCategory" DataType="local:FilterGroupedRecipeCategories">
        <ItemsControl ItemsSource="{Binding}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Margin="1" Orientation="Horizontal" ScrollViewer.HorizontalScrollBarVisibility="Disabled"></StackPanel>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <CheckBox Content="{Binding Instance.Name}" IsChecked="{Binding Bool, Mode=TwoWay}"></CheckBox>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate x:Key="ViewIngredientBpComposition" DataType="model:Ingredient">
        <Grid IsSharedSizeScope="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Value"></ColumnDefinition>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Name"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>

            <Label Content="Owned Ingredient Amount: " Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"></Label>
            <local:TextProgressBar OuterText="{Binding PercentageOfTotalIngredientsGathered}" Grid.Row="0" Grid.Column="2" OuterMaximum="100" OuterValue="{Binding PercentageOfTotalIngredientsGathered}"></local:TextProgressBar>
            
            <Label Content="Value" Grid.Row="1" Grid.Column="0"></Label>
            <Label Content="Name" Grid.Row="1" Grid.Column="1"></Label>
            <Label Content="Amount of Product used" Grid.Row="1" Grid.Column="2"></Label>

            <ItemsControl Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" ItemsSource="{Binding OwnValueCalculator.OrderedBpValues}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid IsSharedSizeScope="True" IsEnabled="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="Value"></ColumnDefinition>
                                <ColumnDefinition SharedSizeGroup="Name"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Text="{Binding ValuePerAmount}"></TextBlock>
                            <TextBlock Grid.Column="1" Text="{Binding Bp.CorrespondingProduct.Name}"></TextBlock>
                            <local:TextProgressBar Grid.Column="2" OuterMaximum="100" OuterValue="{Binding PercentageOfAmountNeeded}"></local:TextProgressBar>

                            <!--TODO Okay! I want to show how much of each bp I should be using for cooking my recipe.
                            Problem with this is that the class bpvalue is shared between all amountNeededValueCalcs and they don't know
                            about how much each recipe uses. So, the way I can solve this is by granting myself access to the recipe's 
                            ingredients' AggregateBPValues OptimalValue solution. I use this class to contain all the info I need.-->
                            
                            <!--<local:InputSlider Grid.Column="2" OuterMaximum="100" OuterValue="{Binding PercentageOfAmountNeeded}"></local:InputSlider>-->
                            <!--Brug evt inputslider  her hvis jeg gerne vil muliggøre at man redigerer i bp-ingridienser efter sortering-->
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>

    </DataTemplate>

    <!--<BitmapImage x:Key="ImageCheckBox" UriSource="check.png"></BitmapImage>
    <BitmapImage x:Key="ImageCross" UriSource="close.png"></BitmapImage>-->

    <!--<DataTemplate x:Key="DataTemplateRecipeDetailsViewer" DataType="{x:Type model:Recipe}">
        <StackPanel Margin="1">
            <ItemsControl ItemsSource="{Binding OwnValue.GetSenders}" Tag="{Binding Value}">
                --><!--<ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Margin="1" Orientation="Horizontal" ScrollViewer.HorizontalScrollBarVisibility="Disabled"></WrapPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>--><!--
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DockPanel>
                            <ProgressBar Value="{Binding Item1}" Maximum="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" DockPanel.Dock="Top"></ProgressBar>
                            <TextBlock Text="{Binding Item2}" DockPanel.Dock="Bottom"></TextBlock>
                        </DockPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

            </ItemsControl>

            --><!--Other valueDetailsViewers inside itemcontrols, displaying the inner values--><!--

        </StackPanel>
    </DataTemplate>-->


    <DataTemplate x:Key="DataTemplateViewValueSender" DataType="local:ProgressInfo">
        <DockPanel Background="AliceBlue">
            <local:TextProgressBar HorizontalAlignment="Left" Background="OrangeRed" Width="200" Height="10" OuterMaximum="{Binding MaximumNeverZero, Mode=OneWay}" OuterValue="{Binding Value, Mode=OneWay}" DockPanel.Dock="Top">
                <local:TextProgressBar.OuterText>
                    <MultiBinding StringFormat="{}{0} %   {1} / {2}">
                        <Binding Path="PercentageCompletion"></Binding>
                        <Binding Path="Value"></Binding>
                        <Binding Path="Maximum"></Binding>
                    </MultiBinding>
                </local:TextProgressBar.OuterText>
            </local:TextProgressBar>
            <TextBlock HorizontalAlignment="Left" Text="{Binding Description, Mode=OneWay}"></TextBlock>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="DataTemplateProductCategoryDetailView" DataType="{x:Type model:ProductCategory}">
        <Expander Background="LightBlue">
            <Expander.Header>
                <TextBlock>
                    <Run Text="Product Category:"></Run>
                    <Run Text="{Binding Name}"></Run>
                    <Run Text=" (Value:"></Run>
                    <Run Text="{Binding OwnValue.GetValue, Mode=OneWay}"></Run>
                    <Run Text=")"></Run>
                </TextBlock>
            </Expander.Header>
            <StackPanel>
                <ItemsControl Visibility="{Binding OwnValue.GetSenders, Converter={StaticResource NullOrEmptyToVisibilityConverter}}" ItemTemplate="{StaticResource DataTemplateViewValueSender}" ItemsSource="{Binding OwnValue.GetSenders}"></ItemsControl>
            </StackPanel>
        </Expander>
    </DataTemplate>

    <DataTemplate x:Key="DataTemplateRecipeCategoryDetailView" DataType="{x:Type model:RecipeCategory}">
        <Expander Background="LightSalmon">
            <Expander.Header>
                <TextBlock>
                    <Run Text="Recipe Category:"></Run>
                    <Run Text="{Binding Name}"></Run>
                    <Run Text=" (Value:"></Run>
                    <Run Text="{Binding OwnValue.GetValue, Mode=OneWay}"></Run>
                    <Run Text=")"></Run>
                </TextBlock>
            </Expander.Header>
            <StackPanel>
                <ItemsControl Visibility="{Binding OwnValue.GetSenders, Converter={StaticResource NullOrEmptyToVisibilityConverter}}" ItemTemplate="{StaticResource DataTemplateViewValueSender}" ItemsSource="{Binding OwnValue.GetSenders}"></ItemsControl>
            </StackPanel>
        </Expander>
    </DataTemplate>

    <DataTemplate x:Key="DataTemplateProductDetailView" DataType="{x:Type model:Product}">
        <Expander Background="LightGreen">
            <Expander.Header>
                <TextBlock>
                    <Run Text="Product:"></Run>
                    <Run Text="{Binding Name}"></Run>
                    <Run Text=" (Value:"></Run>
                    <Run Text="{Binding Value, Mode=OneWay}"></Run>
                    <Run Text=")⟶"></Run>
                </TextBlock>
            </Expander.Header>
            <StackPanel>
                <ItemsControl Visibility="{Binding OwnValue.GetSenders, Converter={StaticResource NullOrEmptyToVisibilityConverter}}" ItemTemplate="{StaticResource DataTemplateViewValueSender}" ItemsSource="{Binding OwnValue.GetSenders}"></ItemsControl>
                <ItemsControl Visibility="{Binding Categories, Converter={StaticResource NullOrEmptyToVisibilityConverter}}" ItemTemplate="{StaticResource DataTemplateProductCategoryDetailView}" ItemsSource="{Binding Categories}"></ItemsControl>
            </StackPanel>
        </Expander>
    </DataTemplate>

    <DataTemplate x:Key="DataTemplateIngredientDetailView" DataType="{x:Type model:Ingredient}">
        <Expander Background="LightYellow">
            <Expander.Header>
                <TextBlock>
                    <Run Text="Ingredient:"></Run>
                    <Run Text="{Binding CorrespondingProduct.Name}"></Run>
                    <Run Text=" (Value:"></Run>
                    <Run Text="{Binding Value, Mode=OneWay}"></Run>
                    <Run Text=")⟶"></Run>
                </TextBlock>
            </Expander.Header>
            <StackPanel>
                <ItemsControl Visibility="{Binding OwnValue.GetSenders, Converter={StaticResource NullOrEmptyToVisibilityConverter}}" ItemTemplate="{StaticResource DataTemplateViewValueSender}" ItemsSource="{Binding OwnValue.GetSenders}"></ItemsControl>
                <ContentControl Visibility="{Binding CorrespondingProduct, Converter={StaticResource NullOrEmptyToVisibilityConverter}}" ContentTemplate="{StaticResource DataTemplateProductDetailView}" Content="{Binding CorrespondingProduct}"></ContentControl>
            </StackPanel>
        </Expander>
    </DataTemplate>

    <DataTemplate x:Key="DataTemplateRecipeDetailView" DataType="{x:Type model:Recipe}">
        <Expander Background="LightSeaGreen">
            <Expander.Header>
                <TextBlock>
                    <Run Text="Recipe:"></Run>
                    <Run Text="{Binding Name}"></Run>
                    <Run Text=" (Value:"></Run>
                    <Run Text="{Binding Value, Mode=OneWay}"></Run>
                    <Run Text=")⟶"></Run>
                </TextBlock>
            </Expander.Header>
            <StackPanel>
                <ItemsControl Visibility="{Binding OwnValue.GetSenders, Converter={StaticResource NullOrEmptyToVisibilityConverter}}" ItemTemplate="{StaticResource DataTemplateViewValueSender}" ItemsSource="{Binding OwnValue.GetSenders}"></ItemsControl>
                <ItemsControl Visibility="{Binding Categories, Converter={StaticResource NullOrEmptyToVisibilityConverter}}" ItemTemplate="{StaticResource DataTemplateRecipeCategoryDetailView}" ItemsSource="{Binding Categories}"></ItemsControl>
                <ItemsControl Visibility="{Binding Ingredients, Converter={StaticResource NullOrEmptyToVisibilityConverter}}" ItemTemplate="{DynamicResource DataTemplateIngredientDetailView}" ItemsSource="{Binding Ingredients}"></ItemsControl>
            </StackPanel>
        </Expander>
    </DataTemplate>

</ResourceDictionary>